version: '3.8'

networks:
  laravel:
    driver: bridge
#  laravel_as:
#    driver: bridge
  # ttt72_net: null

# volumes:
#   caddy_certs:
# #   # scr:
# #   Caddyfile:
# #   # dataredis:
# #   v_mysql:
# #   data-www:
# #   www47:
# #   config:
# #   bu72_front:

volumes:
  caddy_caddyfile:
    driver: bridge

services:

  caddy:
    container_name: caddy
    image: caddy:2.6
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - ./caddy/config:/config/caddy
#      - ${FOLDER_UPR_SERV}/storage/app/caddy:/etc/caddy
      - caddy_caddyfile:/etc/caddy
#      - caddy_caddyfile:/caddy/Caddyfile
#      - caddy_caddyfile:/caddy
#      - caddy_caddyfile:/etc/caddy
#      - caddy_caddyfile:./caddy
#      - caddy_caddyfile:/etc/caddy/Caddyfile
#      - caddy_caddyfile:/caddy
#      - caddyfile:/caddy/Caddyfile
#      - '${FOLDER_UPR_SERV}/storage/app/caddyfile33/:/etc/caddy/Caddyfile'
##      - '${FOLDER_2309LIVEWIRE}:/2309livewire'
##      - '${FOLDER_TEST231012}:${FOLDER_TEST231012_SERV}'
#      - '${FOLDER_2302DIDRIVE}:${FOLDER_2302DIDRIVE_CADDY}'
#      - '${FOLDER_2309LIVEWIRE}:${FOLDER_2309LIVEWIRE_SERV}'
#      - '${FOLDER_TEST23116PHP}:${FOLDER_TEST23116PHP_SERV}'
#      - '${FOLDER_UPR_SERV}:${FOLDER_UPR_SERV_SERV}'
#      -  '/etc/caddy/Caddyfile:${FOLDER_UPR_SERV_SERV}/storage/app/caddyfile2'
#      -  './caddy/Caddyfile:${FOLDER_UPR_SERV_SERV}/storage/app/caddyfile2'
      - '${FOLDER_2308BEGET}:${FOLDER_2308BEGET_SERV}'
#      - '${FOLDER_2401TEST}:${FOLDER_2401TEST_SERV}'
      - '${FOLDER_2312AUTO_AS}:${FOLDER_2312AUTO_AS_SERV}'
      - '${FOLDER_2312AUTO_AS_DIDRIVE}:${FOLDER_2312AUTO_AS_DIDRIVE_SERV}'
      - '${FOLDER_API_PHP74}:${FOLDER_API_PHP74_SERV}'

    depends_on:
      - db_mysql
      - 2308beget
#      - 2309livewire
#      - test231012
#      - 2302didrive
#      - test231116php
#      - upr_serv
#      - 2401test
      - api_php74
    networks:
      - laravel





#  redis:
#    container_name: redis
#    image: redis:latest
#    networks:
#      - laravel
#    ports:
#      - "6379:6379"
##    volumes:
##      - '${MYSQL_DB_FOLDER}:/var/lib/mysql'
#    restart: unless-stopped

#
#  memcached:
#    container_name: memcached
#    image: memcached:latest
#    networks:
#      - laravel
##    environment:
##      MYSQL_ROOT_HOST: "%"
##      MYSQL_ROOT_PASSWORD: ${MYSQL_DB_ROOT_PASSWORD}
#    ports:
#      - "11211:11211"
##    volumes:
##      - '${MYSQL_DB_FOLDER}:/var/lib/mysql'
#    restart: unless-stopped



  db_mysql:
    container_name: db_mysql
    image: mariadb:10.7.8
    networks:
      - laravel
    environment:
      MYSQL_ROOT_HOST: "%"
      MYSQL_ROOT_PASSWORD: ${MYSQL_DB_ROOT_PASSWORD}
#    ports:
#      - 3306:3306
    volumes:
      - '${MYSQL_DB_FOLDER}:/var/lib/mysql'
    restart: unless-stopped



  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    links:
      - db_mysql:db
    ports:
      - 6060:80
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_DB_ROOT_PASSWORD}
      UPLOAD_LIMIT: 300M
    depends_on:
      - db_mysql
    networks:
      - laravel


## ------------ дальше контейнеры в работе ------------------
#
#  2302didrive:
#    container_name: 2302didrive
#
#    build:
#      context: .
#      dockerfile: ${DOCKERFILE_2302DIDRIVE}
#    working_dir: ${FOLDER_2302DIDRIVE_CADDY}
#    environment:
#      - PHPGROUP=www-data
#      - PHPUSER=www-data
#      - FOLDER=${FOLDER_2302DIDRIVE_CADDY}
#    volumes:
#      - '${FOLDER_2302DIDRIVE}:${FOLDER_2302DIDRIVE_CADDY}'
#    restart: unless-stopped
#    expose:
#      - 9000
#
#    depends_on:
#      - db_mysql
#    networks:
#      - laravel




#  2401test:
#    container_name: 2401test
#    depends_on:
#      - db_mysql
#    networks:
#      - laravel
#    build:
#      context: .
#      dockerfile: docker.laravel.Dockerfile
#    working_dir: ${FOLDER_2401TEST_SERV}
#    environment:
#      - PHPGROUP=www-data
#      - PHPUSER=www-data
#      - FOLDER=${FOLDER_2401TEST_SERV}
#    restart: unless-stopped
#    expose:
#      - 9000
#    volumes:
#      - '${FOLDER_2401TEST}:${FOLDER_2401TEST_SERV}'













  #  2309livewire:
#    container_name: 2309livewire
#    depends_on:
#      - db_mysql
#    networks:
#      - laravel
#    build:
#      context: .
#      #      dockerfile: docker.2308beget.Dockerfile
#      dockerfile: docker.2309livewire.Dockerfile
#    working_dir: ${FOLDER_2309LIVEWIRE_SERV}
#    environment:
#      - PHPGROUP=www-data
#      - PHPUSER=www-data
#      - FOLDER=${FOLDER_2309LIVEWIRE_SERV}
#    restart: unless-stopped
#    expose:
#      - 9000
#    volumes:
#      - '${FOLDER_2309LIVEWIRE}:${FOLDER_2309LIVEWIRE_SERV}'
#
#
#
#  upr_serv:
#    container_name: upr_serv
#    depends_on:
#      - db_mysql
#    networks:
#      - laravel
#    build:
#      context: .
#      #      dockerfile: docker.2308beget.Dockerfile
#      dockerfile: docker.laravel.Dockerfile
#    working_dir: ${FOLDER_UPR_SERV_SERV}
#    environment:
#      - PHPGROUP=www-data
#      - PHPUSER=www-data
#      - FOLDER=${FOLDER_UPR_SERV_SERV}
#    restart: unless-stopped
#    expose:
#      - 9000
#    volumes:
#      - '${FOLDER_UPR_SERV}:${FOLDER_UPR_SERV_SERV}'
#      - caddy_caddyfile:${FOLDER_UPR_SERV_SERV}/storage/app/caddy
#
##      - './caddy/Caddyfile:/caddy/Caddyfile'
##      - './caddy/config:/caddy/config'
##      - '${FOLDER_UPR_SERV}/storage/app/caddyfile33/:${FOLDER_UPR_SERV}/storage/app/caddyfile33/'
##      - './caddy/Caddyfile:${FOLDER_UPR_SERV_SERV}/storage/app/caddyfile2'










  2308beget:
    container_name: 2308beget

    build:
      context: .
      dockerfile: docker.2308beget.Dockerfile
    working_dir: ${FOLDER_2308BEGET_SERV}
    environment:
      - PHPGROUP=www-data
      - PHPUSER=www-data
      - FOLDER=${FOLDER_2308BEGET_SERV}
    restart: unless-stopped
    expose:
      - 9000
    volumes:
#      - '${FOLDER_2308BEGET}:/2308beget'
      - '${FOLDER_2308BEGET}:${FOLDER_2308BEGET_SERV}'

    depends_on:
      - db_mysql
    networks:
      - laravel




#  rosoweb:
#    container_name: rosoweb
#    depends_on:
#      - db_mysql
#    networks:
#      - laravel
#    build:
#      context: .
#      dockerfile: docker.rosoweb.Dockerfile
#    working_dir: ${FOLDER_ROSOWEB_SERV}
#    environment:
#      - PHPGROUP=www-data
#      - PHPUSER=www-data
#      - FOLDER=${FOLDER_ROSOWEB_SERV}
#    restart: unless-stopped
#    expose:
#      - 9000
#    volumes:
#      - '${FOLDER_ROSOWEB}:${FOLDER_ROSOWEB_SERV}'




#  site2311ar:
#    container_name: site2311ar
#    depends_on:
#      - db_mysql
#    networks:
#      - laravel
#    build:
#      context: .
#      dockerfile: docker.site2311ar.Dockerfile
#    working_dir: ${FOLDER_2311AR_SERV}
#    environment:
#      - PHPGROUP=www-data
#      - PHPUSER=www-data
#      - FOLDER=${FOLDER_2311AR_SERV}
#    restart: unless-stopped
#    expose:
#      - 9000
#    volumes:
#      - '${FOLDER_2311AR}:${FOLDER_2311AR_SERV}'




#  2311adminator:
#    container_name: 2311adminator
#    depends_on:
#      - db_mysql
#    networks:
#      - laravel
#    build:
#      context: .
#      dockerfile: docker.2311adminator.Dockerfile
#    working_dir: ${FOLDER_2311ADMINATOR_SERV}
#    environment:
#      - PHPGROUP=www-data
#      - PHPUSER=www-data
#      - FOLDER=${FOLDER_2311ADMINATOR_SERV}
#    restart: unless-stopped
#    expose:
#      - 9000
#    volumes:
#      - '${FOLDER_2311ADMINATOR}:${FOLDER_2311ADMINATOR_SERV}'





#  test231116php:
#    container_name: test231116php
##    depends_on:
##      - db_mysql
#    networks:
#      - laravel
#    build:
#      context: .
#      dockerfile: docker.test231116php.Dockerfile
#    working_dir: ${FOLDER_TEST23116PHP_SERV}
#    environment:
#      - PHPGROUP=www-data
#      - PHPUSER=www-data
#      - FOLDER=${FOLDER_TEST23116PHP_SERV}
#    restart: unless-stopped
#    expose:
#      - 9000
#    volumes:
#      - '${FOLDER_TEST23116PHP}:${FOLDER_TEST23116PHP_SERV}'





#  test231012:
#    container_name: test231012
#    depends_on:
#      - db_mysql
##      - memcached
##      - redis
##    links:
##      - memcached:Memcached
#    networks:
#      - laravel
#    build:
#      context: .
#      dockerfile: ${TEST231012_DOCKERFILE}
#    working_dir: ${FOLDER_TEST231012_SERV}
#    environment:
#      - PHPGROUP=www-data
#      - PHPUSER=www-data
#    restart: unless-stopped
#    expose:
#      - 9000
#    volumes:
#      - '${FOLDER_TEST231012}:${FOLDER_TEST231012_SERV}'










#  my-cron-job:
#    container_name: my-cron-job
#    build:
#      context: .
#      dockerfile: cron/Dockerfile  # Указываем путь к Dockerfile относительно docker-compose.yml
#    volumes:
#      - ./cron/cronfile:/etc/cron.d/mycron
#      - ./cron/script.sh:/usr/src/script.sh
#      - /cron/log.log:/var/log/crontest
#    #запускает cron в режиме foreground, чтобы контейнер не завершался сразу после выполнения задач.
##    command: ["cron", "-f"]
#    command: ["cron", "&&", "tail", "-f", "/var/log/cron.log"]

  db_mysql_as:
    container_name: db_mysql_as
    image: mariadb:10.7.8
    networks:
      - laravel
    environment:
      MYSQL_ROOT_HOST: "%"
      MYSQL_ROOT_PASSWORD: ${AS_MYSQL_DB_ROOT_PASSWORD}
#    ports:
#      - '3307:3306'
    volumes:
      - '${AS_MYSQL_DB_FOLDER}:/var/lib/mysql'
    restart: unless-stopped




  #++
  phpmyadmin_as:
    container_name: phpmyadmin_as
    image: phpmyadmin/phpmyadmin
    links:
      - db_mysql_as:db
    ports:
      - 6061:80
    environment:
      MYSQL_ROOT_PASSWORD: ${AS_MYSQL_DB_ROOT_PASSWORD}
      UPLOAD_LIMIT: 300M
    depends_on:
      - db_mysql_as
    networks:
      - laravel





  api_php74:
    container_name: api_php74
    build:
      context: .
      dockerfile: ./docker.php74_soap.Dockerfile
    working_dir: ${FOLDER_API_PHP74_SERV}
    environment:
      - PHPGROUP=www-data
      - PHPUSER=www-data
      - FOLDER=${FOLDER_API_PHP74_SERV}
    restart: unless-stopped
    tty: true
    expose:
      - 9000
    networks:
      - laravel
    links:
      - db_mysql_as:db
    depends_on:
      - db_mysql_as
    volumes:
      - '${FOLDER_API_PHP74}:${FOLDER_API_PHP74_SERV}'





  2312auto_as:
    container_name: 2312auto_as
    build:
      context: .
      dockerfile: docker.laravel_vue_soap.Dockerfile
    working_dir: ${FOLDER_2312AUTO_AS_SERV}
    environment:
      - PHPGROUP=www-data
      - PHPUSER=www-data
      - FOLDER=${FOLDER_2312AUTO_AS_SERV}
    restart: unless-stopped
    # tty: true
    expose:
      - 9000
    networks:
      - laravel
    links:
      - db_mysql_as:db
    depends_on:
      - db_mysql_as
    volumes:
      - '${FOLDER_2312AUTO_AS}:${FOLDER_2312AUTO_AS_SERV}'

  2312auto_as_prod:
    container_name: 2312auto_as_prod
    build:
      context: .
      dockerfile: docker.laravel_vue.Dockerfile
    working_dir: ${FOLDER_2312AUTO_AS_PROD_SERV}
    environment:
      - PHPGROUP=www-data
      - PHPUSER=www-data
      - FOLDER=${FOLDER_2312AUTO_AS_PROD_SERV}
    restart: unless-stopped
    # tty: true
    expose:
      - 9000
    networks:
      - laravel
    links:
      - db_mysql_as:db
    depends_on:
      - db_mysql_as
    volumes:
      - '${FOLDER_2312AUTO_AS_PROD}:${FOLDER_2312AUTO_AS_PROD_SERV}'

  2312didrive_auto:
    container_name: 2312didrive_auto
    build:
      context: .
      #      dockerfile: docker.2308beget.Dockerfile
      dockerfile: docker.laravel.Dockerfile
    working_dir: ${FOLDER_2312AUTO_AS_DIDRIVE_SERV}
    environment:
      - PHPGROUP=www-data
      - PHPUSER=www-data
      - FOLDER=${FOLDER_2312AUTO_AS_DIDRIVE_SERV}
    restart: unless-stopped
    expose:
      - 9000
    volumes:
      - '${FOLDER_2312AUTO_AS_DIDRIVE}:${FOLDER_2312AUTO_AS_DIDRIVE_SERV}'
    links:
      - db_mysql_as:db
    networks:
      - laravel
    depends_on:
      - db_mysql_as


  2312didrive_auto_prod:
    container_name: 2312didrive_auto_prod
    build:
      context: .
      #      dockerfile: docker.2308beget.Dockerfile
      dockerfile: docker.laravel.Dockerfile
    working_dir: ${FOLDER_2312AUTO_AS_DIDRIVE_PROD_SERV}
    environment:
      - PHPGROUP=www-data
      - PHPUSER=www-data
      - FOLDER=${FOLDER_2312AUTO_AS_DIDRIVE_PROD_SERV}
    restart: unless-stopped
    expose:
      - 9000
    volumes:
      - '${FOLDER_2312AUTO_AS_DIDRIVE_PROD}:${FOLDER_2312AUTO_AS_DIDRIVE_PROD_SERV}'
    links:
      - db_mysql_as:db
    networks:
      - laravel
    depends_on:
      - db_mysql_as

